From 329fdd2455eb4655a5075b280c02ed24d12a5947 Mon Sep 17 00:00:00 2001
Message-Id: <329fdd2455eb4655a5075b280c02ed24d12a5947.1603112886.git.anand.jain@oracle.com>
In-Reply-To: <cover.1603112886.git.anand.jain@oracle.com>
References: <cover.1603112886.git.anand.jain@oracle.com>
From: Anand Jain <anand.jain@oracle.com>
Date: Tue, 4 Aug 2020 17:01:01 +0800
Subject: [PATCH 3/3] btrfs: boilerplates: add dbgctl_B

Signed-off-by: Anand Jain <anand.jain@oracle.com>
---
 fs/btrfs/procfs.c | 75 +++++++++++++++++++++++++++++++++++++++++++++--
 fs/btrfs/procfs.h |  3 ++
 2 files changed, 76 insertions(+), 2 deletions(-)

diff --git a/fs/btrfs/procfs.c b/fs/btrfs/procfs.c
index c536ae226fb5..a10a06d12f33 100644
--- a/fs/btrfs/procfs.c
+++ b/fs/btrfs/procfs.c
@@ -13,6 +13,7 @@
 #define BTRFS_PROC_DEVLIST	"devlist"
 #define BTRFS_PROC_FSINFO	"fsinfo"
 #define BTRFS_PROC_DBGCTL_A	"dbgctl_A"
+#define BTRFS_PROC_DBGCTL_B	"dbgctl_B"
 
 //#define USE_ALLOC_LIST
 //#define VOL_FLAGS
@@ -395,8 +396,9 @@ static void print_a_device(struct seq_file *seq, struct btrfs_device *device,
 		}
 	}
 }
-static void print_a_fs_device(struct seq_file *seq, struct btrfs_fs_devices *fs_devices,
-			      struct btrfs_fs_devices *sprt)
+
+void print_a_fs_device(struct seq_file *seq, struct btrfs_fs_devices *fs_devices,
+		       struct btrfs_fs_devices *sprt)
 {
 #define BTRFS_SEQ_PRINT(plist, arg)\
 		snprintf(str, BPSL, plist, arg);\
@@ -548,6 +550,53 @@ void btrfs_print_devlist(struct seq_file *seq, struct btrfs_fs_devices *the_fs_d
 	}
 }
 
+int btrfs_dbgctl_B = -1;
+void btrfs_dbgctl_B_wait(char *suffix)
+{
+	int old = btrfs_dbgctl_B;
+
+	printk("bp: btrfs_dbgctl_B %d waiting..%s\n", btrfs_dbgctl_B, suffix);
+	while (old == btrfs_dbgctl_B) {
+		msleep(100);
+		continue;
+	}
+}
+
+static ssize_t btrfs_dbgctl_B_write(struct file *file,
+				    const char __user *buffer, size_t count,
+				    loff_t *pos)
+{
+	char buf[256];
+	long val;
+	int ret = 0;
+
+	if (count > 256)
+		return -EINVAL;
+
+	if (copy_from_user(buf, buffer, count))
+		return -EFAULT;
+
+	buf[count] = '\0';
+	ret = kstrtol(buf, 10, &val);
+	if (ret)
+		return -ret;
+
+	btrfs_dbgctl_B = val;
+	return count;
+}
+
+static int btrfs_dbgctl_B_read(struct seq_file *seq, void *offset)
+{
+	seq_printf(seq, "%d\n", btrfs_dbgctl_B);
+	return 0;
+}
+
+static int btrfs_dbgctl_B_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, btrfs_dbgctl_B_read, PDE_DATA(inode));
+}
+
+
 int btrfs_dbgctl_A = -1;
 void btrfs_dbgctl_A_wait(char *suffix)
 {
@@ -616,6 +665,25 @@ static int btrfs_seq_devlist_open(struct inode *inode, struct file *file)
 	return single_open(file, btrfs_devlist_show, PDE_DATA(inode));
 }
 
+#ifdef OLD_PROC
+static const struct file_operations btrfs_dbgctl_B_fops = {
+	.owner   = THIS_MODULE,
+	.open    = btrfs_dbgctl_B_open,
+	.read    = seq_read,
+	.llseek  = seq_lseek,
+	.release = single_release,
+	.write	 = btrfs_dbgctl_B_write,
+};
+#else
+static const struct proc_ops btrfs_dbgctl_B_fops = {
+	.proc_open    = btrfs_dbgctl_B_open,
+	.proc_read    = seq_read,
+	.proc_lseek  = seq_lseek,
+	.proc_release = single_release,
+	.proc_write = btrfs_dbgctl_B_write,
+};
+#endif
+
 #ifdef OLD_PROC
 static const struct file_operations btrfs_dbgctl_A_fops = {
 	.owner   = THIS_MODULE,
@@ -679,6 +747,8 @@ void btrfs_init_procfs(void)
 					&btrfs_seq_fsinfo_fops, NULL);
 		proc_create_data(BTRFS_PROC_DBGCTL_A, S_IRUGO|S_IWUGO, btrfs_proc_root,
 					&btrfs_dbgctl_A_fops, NULL);
+		proc_create_data(BTRFS_PROC_DBGCTL_B, S_IRUGO|S_IWUGO, btrfs_proc_root,
+					&btrfs_dbgctl_B_fops, NULL);
 	}
 	return;
 }
@@ -689,6 +759,7 @@ void btrfs_exit_procfs(void)
 		remove_proc_entry(BTRFS_PROC_DEVLIST, btrfs_proc_root);
 		remove_proc_entry(BTRFS_PROC_FSINFO, btrfs_proc_root);
 		remove_proc_entry(BTRFS_PROC_DBGCTL_A, btrfs_proc_root);
+		remove_proc_entry(BTRFS_PROC_DBGCTL_B, btrfs_proc_root);
 	}
 	remove_proc_entry(BTRFS_PROC_PATH, NULL);
 }
diff --git a/fs/btrfs/procfs.h b/fs/btrfs/procfs.h
index 351b3fd5f41c..456646f72f8e 100644
--- a/fs/btrfs/procfs.h
+++ b/fs/btrfs/procfs.h
@@ -1,3 +1,6 @@
 void btrfs_exit_procfs(void);
 void btrfs_init_procfs(void);
+void print_a_fs_device(struct seq_file *seq, struct btrfs_fs_devices *fs_devices,
+		      struct btrfs_fs_devices *sprt);
 void btrfs_dbgctl_A_wait(char *suffix);
+void btrfs_dbgctl_B_wait(char *suffix);
-- 
2.25.1

